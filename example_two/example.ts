// Generated by https://github.com/reggi/linear-builder-class
// Do not edit this code directly
import {StringOrNumber, ToObject, ChainMe, Done} from "./types.ts"
class Example_stringOrNumber {
  stringOrNumber<A>(stringOrNumber: StringOrNumber<A>) {
    return new Example_toObject(
      stringOrNumber
    )
  }
}
class Example_toObject<A> {
  constructor (
      public stringOrNumber: StringOrNumber<A>
  ) {}
  toObject<B>(toObject: ToObject<A, B>) {
    return new Example_chainMe(
      this.stringOrNumber,
      toObject
    )
  }
}
class Example_chainMe<A, B> {
  constructor (
      public stringOrNumber: StringOrNumber<A>,
      public toObject: ToObject<A, B>
  ) {}
  chainMe<C>(chainMe: ChainMe<B, C>) {
    return new Example_done(
      this.stringOrNumber,
      this.toObject,
      chainMe
    )
  }
}
class Example_done<A, B, C> {
  constructor (
      public stringOrNumber: StringOrNumber<A>,
      public toObject: ToObject<A, B>,
      public chainMe: ChainMe<B, C>
  ) {}
  done(done: Done<C>) {
    return new Example_final(
      this.stringOrNumber,
      this.toObject,
      this.chainMe,
      done
    )
  }
}
class Example_final<A, B, C> {
  constructor (
      public stringOrNumber: StringOrNumber<A>,
      public toObject: ToObject<A, B>,
      public chainMe: ChainMe<B, C>,
      public done: Done<C>
  ) {}
}
export class Example extends Example_stringOrNumber {}
